esphome:
  name: hackem-doorlock
  board: d1_mini
  platform: esp8266

# Enable logging
logger:

globals:
  - id: wifi_connected
    type: bool
    restore_value: no
    initial_value: "false"
  - id: mqtt_connected
    type: bool
    restore_value: no
    initial_value: "false"
    
interval:
  - interval: 1s
    then:
      - if:
          condition:
            wifi.connected:
          then:
            - lambda: |-
                id(wifi_connected) = true;
            - script.execute: status_wifi_connected
          else:
            - lambda: |-
                id(wifi_connected) = false;
            - script.execute: status_no_connection

mqtt:
  broker: 192.168.1.100
  username: door
  password: !secret mqtt_password
  on_connect:
    - lambda: |-
        id(mqtt_connected) = true;
    - script.execute: status_ready
  on_disconnect:
    - lambda: |-
        id(mqtt_connected) = false;
    - script.execute: status_wifi_connected
  on_message:
    topic: door
    payload: "1"
    then:
      - switch.turn_on: relay
      - mqtt.publish:
          topic: door
          payload: "zhopa"
          retain: true

api:
  encryption:
    key: !secret doorlock_apikey

ota:
  password: !secret ota_pass

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "HackemLock Fallback Hotspot"
    password: !secret wifi_fallback_password

captive_portal:

binary_sensor:
  - platform: status
    name: "Node Status"
    id: system_status
  - platform: gpio
    name: Button
    pin:
      number: D0
      mode:
        input: true
        pulldown: true
    on_press:
      - switch.turn_on: relay

script:
  - id: status_no_connection
    then: 
      - while:
          condition:
            not:
              wifi.connected
          then:
            - switch.turn_on: status_light
            - delay: 100ms
            - switch.turn_off: status_light
            - delay: 100ms
  - id: status_wifi_connected
    then: 
      - while:
          condition:
            and: 
              - wifi.connected:
              - not: 
                  mqtt.connected:
          then:
            - switch.turn_on: status_light
            - delay: 250ms
            - switch.turn_off: status_light
            - delay: 250ms
      - script.execute: status_ready
  - id: status_ready
    then: 
      - switch.turn_on: status_light
  - id: door_opened
    then: 
      - switch.turn_off: status_light
      - delay: 100ms
      - switch.turn_on: status_light
      - delay: 100ms
      - switch.turn_off: status_light
      - delay: 100ms
      - switch.turn_on: status_light
      - delay: 100ms
      - switch.turn_off: status_light
      - delay: 100ms
      - switch.turn_on: status_light
      - delay: 100ms
      - switch.turn_off: status_light
      - delay: 100ms
      - switch.turn_on: status_light

switch:
  - platform: gpio
    name: "Door Relay"
    id: relay
    pin: 
      number: D4
      inverted: true
      mode:
        open_drain: true
        output: true
    on_turn_on:
      - script.execute: door_opened
      - delay: 100ms
      - switch.turn_off: relay
  - platform: gpio
    name: Status LED
    id: status_light
    pin: D5

web_server:
  port: 80
  auth:
    username: admin
    password: !secret web_server_password

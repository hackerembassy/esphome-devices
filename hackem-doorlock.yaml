esphome:
  name: hackem-doorlock
  friendly_name: "Hackem Doorlock"
  board: featheresp32
  platform: esp32

# Enable logging
logger:

globals:
  - id: wifi_connected
    type: bool
    restore_value: no
    initial_value: "false"
  - id: mqtt_connected
    type: bool
    restore_value: no
    initial_value: "false"
    
interval:
  - interval: 1s
    then:
      - if:
          condition:
            - wifi.connected:
          then:
            - if:
                condition:
                  not:
                    mqtt.connected:
                then:
                  - lambda: |-
                      id(wifi_connected) = true;
                  - script.execute: status_wifi_connected
          else:
            - lambda: |-
                id(wifi_connected) = false;
            - script.execute: status_no_connection

mqtt:
  broker: 192.168.1.100
  username: door
  password: !secret mqtt_password
  on_connect:
    - lambda: |-
        id(mqtt_connected) = true;
    - script.execute: status_ready
  on_disconnect:
    - lambda: |-
        id(mqtt_connected) = false;
    - script.execute: status_wifi_connected
  on_message:
    topic: door
    payload: "1"
    then:
      - switch.turn_on: relay
      - mqtt.publish:
          topic: door
          payload: "zhopa"
          retain: true

api:
  encryption:
    key: !secret doorlock_apikey

ota:
  password: !secret ota_pass

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Hackem Fallback"
    password: !secret wifi_fallback_password

captive_portal:

binary_sensor:
  - platform: status
    name: "Node Status"
    id: system_status
  - platform: gpio
    pin:
      number: GPIO0
      inverted: true
      mode:
        input: true
        pullup: true
    name: "T-Display Button 0"
    id: tdisplay_button_input_0
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    name: "T-Display Button 1"
    id: tdisplay_button_input_1
    on_click:
      - switch.turn_on: relay
  - platform: gpio
    name: Unlock Button
    pin:
      number: GPIO26
      mode:
        input: true
        pulldown: true
    on_press:
      - switch.turn_on: relay

script:
  - id: status_no_connection
    then:
      - logger.log: "No Connection"
      - light.turn_on:
          id: status_light
          effect: "Blink"
      - while:
          condition:
            not:
              wifi.connected:
          then:
            - delay: 250ms

  - id: status_wifi_connected
    then:
      - logger.log: "Wi-Fi Connected"
      - light.turn_on:
          id: status_light
          effect: "Fast Pulse"
      - while:
          condition:
            and:
              - wifi.connected:
              - not:
                  mqtt.connected:
          then:
            - delay: 250ms
      - script.execute: status_ready

  - id: status_ready
    then:
      - light.turn_on:
          id: status_light
          effect: "None"

  - id: door_opened
    then:
      # - light.turn_off:
      #     id: status_light
      #     transition_length: 0s
      # - light.turn_on:
      #     id: status_light
      #     transition_length: 2s
      #     brightness: 100%
      - light.turn_on:
          id: status_light
          effect: "Blink faster"
      - delay: 300ms
      - light.turn_on:
          id: status_light
          effect: "None"
      - if:
          condition:
            - script.is_running: status_wifi_connected
          then:
            - script.stop: status_wifi_connected
      - if:
          condition:
            - script.is_running: status_no_connection
          then:
            - script.stop: status_no_connection

switch:
  - platform: gpio
    name: "Door Relay"
    restore_mode: ALWAYS_OFF
    id: relay
    pin:
      number: GPIO27
      inverted: true
      mode:
        open_drain: true
        output: true
    on_turn_on:
      - script.execute: door_opened
      - delay: 200ms
      - switch.turn_off: relay

button:
  - platform: restart
    name: Restart

output:
  - platform: ledc
    id: output_status
    pin: GPIO25
  - platform: ledc
    id: backlight_led
    pin: GPIO4
    
image:
  - file: "doorlock/flag.png"
    id: british_flag
    resize: 240x120
    type: RGB24
  - file: "doorlock/error.png"
    id: error_icon
    resize: 100x100
    type: RGB24

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19
  
display:
  - platform: st7789v
    model: TTGO TDisplay 135x240
    cs_pin: GPIO5
    dc_pin: GPIO16
    reset_pin: GPIO23
    rotation: 270
    lambda: |-
      //if (id(system_status).state) {
      if (id(mqtt_connected)) {
        it.image(0, 7, id(british_flag));
        //it.print(235, 5, id(roboto_12), id(my_green), TextAlign::TOP_RIGHT, "Online");
      } else {
        it.rectangle(0,  0, it.get_width(), it.get_height(), id(my_gray));
        it.rectangle(0, 20, it.get_width(), it.get_height(), id(my_gray));   // header bar
        it.print(5, 5, id(roboto_12), id(my_yellow), TextAlign::TOP_LEFT, "Hacker Embassy");

        it.image(82, 34, id(error_icon));
        it.print(235, 5, id(roboto_12), id(my_red), TextAlign::TOP_RIGHT, "Offline");
        if (id(wifi_connected)) {
            it.print(120, 115, id(roboto_12), id(my_green), TextAlign::TOP_CENTER, "Wi-Fi connected");
        } else {
            it.print(120, 115, id(roboto_12), id(my_red), TextAlign::TOP_CENTER, "Wi-Fi disconnected");
        }
      }

light:
  - platform: monochromatic
    name: "LCD Backlight"
    restore_mode: ALWAYS_ON
    id: backlight
    output: backlight_led
  - platform: monochromatic
    name: "Status Light"
    id: status_light
    output: output_status
    effects:
      - pulse:
      - pulse:
          name: "Very Fast Pulse"
          transition_length: 0.2s
          update_interval: 0.2s
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.3s
          update_interval: 0.3s
      - pulse:
          name: "Slow Pulse"
          transition_length: 0.6s
          update_interval: 0.6s
      - strobe:
          name: Blink
          colors:
            - state: true
              brightness: 100%
              duration: 100ms
            - state: false
              duration: 100ms
      - strobe:
          name: Blink faster
          colors:
            - state: true
              brightness: 100%
              duration: 50ms
            - state: false
              duration: 50ms

color:
  - id: my_red
    red: 100%
    green: 0%
    blue: 0%
  - id: my_yellow
    red: 100%
    green: 100%
    blue: 0%
  - id: my_green
    red: 0%
    green: 100%
    blue: 0%
  - id: my_blue
    red: 0%
    green: 0%
    blue: 100%
  - id: my_gray
    red: 50%
    green: 50%
    blue: 50%

font:
  - file: "gfonts://Roboto"
    id: roboto_12
    size: 12

web_server:
  port: 80
  auth:
    username: admin
    password: !secret web_server_password
